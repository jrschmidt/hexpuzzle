// Generated by CoffeeScript 1.6.3
var PuzzleApp, PuzzleGridModel, PuzzlePiece, PuzzleView, RedrawBuffer, start;

PuzzleApp = (function() {
  function PuzzleApp() {
    this.grid = new PuzzleGridModel;
    this.puzzle_view = new PuzzleView;
    this.piece = new PuzzlePiece(this);
    this.piece.draw_piece(0, 0);
    alert(":-)");
    this.piece.draw_piece(2, 1);
  }

  return PuzzleApp;

})();

PuzzleGridModel = (function() {
  function PuzzleGridModel() {}

  PuzzleGridModel.prototype.get_xy = function(a, b) {
    var t_dx, t_dy, x, xy, y;
    if (this.in_range(a, b)) {
      t_dx = -3;
      t_dy = -2;
      x = 103 + 14.5 * a + (a % 2) / 2 + t_dx;
      y = 28 + 19 * b + (a % 2) * 10 + t_dy;
      xy = [x, y];
    } else {
      xy = [0, 0];
    }
    return xy;
  };

  PuzzleGridModel.prototype.in_range = function(a, b) {
    var ok;
    if (a == null) {
      a = 0;
    }
    if (b == null) {
      b = 0;
    }
    ok = true;
    if (a < 1 || a > 24) {
      ok = false;
    }
    if (b < 1 || b > 10) {
      ok = false;
    }
    if (b === 10 && a % 2 === 1) {
      ok = false;
    }
    return ok;
  };

  return PuzzleGridModel;

})();

PuzzlePiece = (function() {
  function PuzzlePiece(puzzle_app) {
    var dxy;
    this.dim = this.get_dim();
    this.width = this.dim[0];
    this.height = this.dim[1];
    this.redraw = document.createElement('canvas');
    this.redraw.width = this.width;
    this.redraw.height = this.height;
    this.puzzle = puzzle_app;
    this.grid = this.puzzle.grid;
    this.canvas = document.getElementById("puzzle-widget");
    this.context = this.canvas.getContext("2d");
    dxy = this.get_piece_xy_offset();
    this.dx = dxy[0];
    this.dy = dxy[1];
    this.redraw = document.createElement('canvas');
    this.redraw.width = this.width;
    this.redraw.height = this.height;
  }

  PuzzlePiece.prototype.draw_piece = function(a, b) {
    var ctx, xx, xy, yy;
    this.pc_img = document.getElementById("piece");
    if (this.grid.in_range(a, b)) {
      xy = this.grid.get_xy(a, b);
      xx = xy[0] + this.dx;
      yy = xy[1] + this.dy;
      if (this.redraw.width > 0 && this.redraw.height > 0) {
        ctx = this.redraw.getContext('2d');
        ctx.drawImage(this.canvas, xx, yy, this.width, this.height, 0, 0, this.width, this.height);
      } else {
        alert("redraw image not yet ready");
      }
      this.context.drawImage(this.redraw, 300, 100);
      return this.context.drawImage(this.pc_img, xx, yy);
    } else {
      return this.context.drawImage(this.pc_img, 0, 100);
    }
  };

  PuzzlePiece.prototype.get_dim = function() {
    var dim;
    dim = [63, 87];
    return dim;
  };

  PuzzlePiece.prototype.get_piece_xy_offset = function() {
    var dx, dxy, dy;
    dx = -14;
    dy = 0;
    dxy = [dx, dy];
    return dxy;
  };

  return PuzzlePiece;

})();

RedrawBuffer = (function() {
  function RedrawBuffer() {
    this.buffer = document.createElement('canvas');
    this.width = 1;
    this.height = 1;
  }

  RedrawBuffer.prototype.reset_size = function(x, y) {
    this.width = x;
    return this.height = y;
  };

  return RedrawBuffer;

})();

PuzzleView = (function() {
  function PuzzleView() {
    this.canvas = document.getElementById("puzzle-widget");
    this.context = this.canvas.getContext("2d");
    this.img = document.getElementById("frame");
    this.context.drawImage(this.img, 100, 30);
  }

  return PuzzleView;

})();

start = function() {
  return this.app = new PuzzleApp();
};

window.onload = start;
